<!--HTML-->
<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <title>Convertidor a Numeros Romanos</title>
  </head>
  <body>
    <main>
      <h1>Convertidor a Números Romanos</h1>
      <form id="form" class="form">
        <fieldset>
          <label for="number">Ingresar un número:</label><br/>
          <input type="number" id="number" required />
          <button type="button" id="convert-btn">Convertir</button>
        </fieldset>
      </form>
      <div id="output" class="output hidden"></div>
    </main>
    <script src="script.js"></script>
  </body>
</html>


<!-- JS -->
const formulario = document.getElementById('form');
const convertirBoton = document.getElementById('convert-btn');
const respuesta = document.getElementById('output');

const convertirARomano = num => {
  const numR= [
    ['M', 1000],
    ['CM', 900],
    ['D', 500],
    ['CD', 400],
    ['C', 100],
    ['XC', 90],
    ['L', 50],
    ['XL', 40],
    ['X', 10],
    ['IX', 9],
    ['V', 5],
    ['IV', 4],
    ['I', 1]
  ];
  const res = [];

  numR.forEach(function (arr) {
    while (num >= arr[1]) {
      res.push(arr[0]);
      num -= arr[1];
    }
  });

  return res.join('');
};

const esValido = (str, int) => {
  let TextoError = '';

  if (!str || str.match(/[e.]/g)) {
    TextoError = 'Please enter a valid number.';
  } else if (int < 1) {
    TextoError = 'Please enter a number greater than or equal to 1.';
  } else if (int > 3999) {
    TextoError = 'Please enter a number less than or equal to 3999.';
  } else {
    
    return true;
  }

  
  respuesta.innerText = TextoError;
  respuesta.classList.add('alert');

  return false;
};

const limpiarRespuesta = () => {
  respuesta.innerText = '';
  respuesta.classList.remove('alert');
};

formulario.addEventListener('submit', e => {
  e.preventDefault();
  updateUI();
});

convertirBoton.addEventListener('click', () => {
  updateUI();
});

const updateUI = () => {
  const numStr = document.getElementById('number').value;
  const int = parseInt(numStr, 10);

  respuesta.classList.remove('hidden');

  limpiarRespuesta();

  if (esValido(numStr, int)) {
    respuesta.innerText = convertirARomano(int);
  }
};

<!-- CSS -->
:root {
  --color-00: #452B1F;
  --color-01: #850000;
  --color-02: #FFC080;
  --color-03: #FFC080;
  --color-04: #C9B481;
  --color-05: #8B9467;
  --color-06: #6495ED;
  --error: violet;
  --danger-color: red;
  --danger-background: pink;
}

*,
::before,
::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  min-height: 100px;
  padding: 5vh 3vw;
  font-family: Baskerville Old Face, Garamond, Times New Roman;
  font-size: 1.1em;
  background-image: url("https://img.fotocommunity.com/astronomische-uhr-auf-hampton-court-palace-schloss-heinrich-des-viii-7789c080-0ccb-4a34-90ba-534ea92f55a8.jpg?height=1080");
  background-size: cover;
  background-position: center;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

h1 {
  text-align: center;
  margin: 8vh auto;
  max-width: 350px;
  font-family: Baskerville Old Face, Garamond, Times New Roman;
  font-style: italic;
  font-weight: bold;
  color: white;
  text-decoration: underline;
}

form {
  color: var(--color-01);
  margin: auto 10vw;
  padding: 10vw auto;
  border: 5px solid var(--color-01);
  text-align: center;
  width: 100%;
  max-width: 500px;
  background-color: var(--color-04);
}

fieldset {
  border: 0 none;
  height: 100%;
  padding: 5vh;
  margin: 2vh 3vw;
}

label {
  display: inline-block;
  font-size: 1.6rem;
  margin-bottom: 2vh;
  font-weight: bold;
}

input:focus-visible,
button:focus-visible {
  outline: 3px solid var(--blue-50);
}

input {
  display: block;
  font-size: 2.5rem;
  width: 100%;
  height: 12vh;
  padding: 2vh 3vw;
  margin: 2vh 0;
  line-height: 1.4;
  color: var(--color-00);
  background-color: var(--color-05);
  border: 1px solid var(--color-01);
}

button {
  cursor: pointer;
  margin-top: 3vh;
  background-image: linear-gradient(#fecc4c, #ffac33);
  border: 3px solid #feac32;
  padding: 2vh 3vw;
  font-size: 1.5rem;
  width: 100%;
}

.output {
  color: black;
  background-color: var(--color-03);
  border: 3px solid var(--color-01);
  font-size: 2.5rem;
  width: 100%;
  max-width: 500px;
  min-height: 60px;
  margin-top: 5vh;
  padding: 0.5em;
  overflow-wrap: break-word;
  text-align: center;
}

.alert {
  font-size: 2rem;
  background-color: var(--danger-background);
  border: 3px solid var(--danger-color);
  color: var(--danger-color);
}

.hidden {
  display: none;
}
